name: 'Deployment'

# This will trigger the action on each push to the `release` branch.
on:
  push:
    branches:
      - main

jobs:
  bump-version:
    name: 'Bump the patch version'
    runs-on: [ubuntu-latest]
    permissions:
      contents: write
    steps:
      - name: 'Checkout source code'
        uses: 'actions/checkout@v2'
        with:
          ref: ${{ github.ref }}
      - name: 'Bump patch version'
        id: version-bump
        uses: 'phips28/gh-action-bump-version@master'
        with:
          patch-wording: 'hotfix,fix,feature'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # publish-tauri:
  #   permissions:
  #     contents: write
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       platform: [macos-latest, ubuntu-20.04, windows-latest]

  #   runs-on: ${{ matrix.platform }}
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: setup node
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 20

  #     - name: install Rust stable
  #       uses: dtolnay/rust-toolchain@stable

  #     - name: install dependencies (ubuntu only)
  #       if: matrix.platform == 'ubuntu-20.04'
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

  #     - name: install frontend dependencies
  #       run: yarn install # change this to npm or pnpm depending on which one you use

  #     - uses: tauri-apps/tauri-action@v0
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tagName: MyTerm-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
  #         releaseName: 'MyTerm v__VERSION__'
  #         releaseBody: 'See the assets to download this version and install.'
  #         releaseDraft: true
  #         prerelease: false
